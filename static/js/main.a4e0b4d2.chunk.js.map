{"version":3,"sources":["clubimgs/wol.png","clubimgs/bou.png","clubimgs/ars.png","clubimgs/bha.png","clubimgs/bur.png","clubimgs/car.png","clubimgs/che.png","clubimgs/cry.png","clubimgs/eve.png","clubimgs/ful.png","clubimgs/hud.png","clubimgs/lei.png","clubimgs/liv.png","clubimgs/mci.png","clubimgs/mun.png","clubimgs/new.png","clubimgs/sou.png","clubimgs/tot.png","clubimgs/wat.png","clubimgs/whu.png","components/Navbar.js","components/Header.js","components/Main.js","components/Footer.js","components/Image.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","props","react_default","a","createElement","className","href","alt","src","message","correct","topscore","Header","class","Main","children","Footer","Image","name","onClick","pickImg","App","state","picked","shuffleArray","imgArray","Img","i","length","j","Math","floor","random","_ref","console","log","_this","indexOf","setState","concat","imgSwitch","bournemouth","arsenal","brightonandhovealbion","burnley","cardiffcity","chelsea","crystalpalace","everton","fulham","huddersfieldtown","leicestercity","liverpool","manchestercity","manchesterunited","newcastleunited","southampton","tottenhamhotspur","watford","westhamunited","wolverhamptonwanderers","_this2","this","components_Navbar","components_Header","components_Main","map","image","components_Image","key","components_Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a4e0b4d2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wol.04a1fd22.png\";","module.exports = __webpack_public_path__ + \"static/media/bou.3fc47d2d.png\";","module.exports = __webpack_public_path__ + \"static/media/ars.468c3b37.png\";","module.exports = __webpack_public_path__ + \"static/media/bha.c8a80eab.png\";","module.exports = __webpack_public_path__ + \"static/media/bur.5ae7ea63.png\";","module.exports = __webpack_public_path__ + \"static/media/car.acfeccd8.png\";","module.exports = __webpack_public_path__ + \"static/media/che.1b2a594a.png\";","module.exports = __webpack_public_path__ + \"static/media/cry.bfc0cfa3.png\";","module.exports = __webpack_public_path__ + \"static/media/eve.738a7b8f.png\";","module.exports = __webpack_public_path__ + \"static/media/ful.375a504e.png\";","module.exports = __webpack_public_path__ + \"static/media/hud.9140dc95.png\";","module.exports = __webpack_public_path__ + \"static/media/lei.3104dfe5.png\";","module.exports = __webpack_public_path__ + \"static/media/liv.f57b82cb.png\";","module.exports = __webpack_public_path__ + \"static/media/mci.06098971.png\";","module.exports = __webpack_public_path__ + \"static/media/mun.cf34ecb8.png\";","module.exports = __webpack_public_path__ + \"static/media/new.b0db31d7.png\";","module.exports = __webpack_public_path__ + \"static/media/sou.2eb2ea19.png\";","module.exports = __webpack_public_path__ + \"static/media/tot.165ad88e.png\";","module.exports = __webpack_public_path__ + \"static/media/wat.c08eb98a.png\";","module.exports = __webpack_public_path__ + \"static/media/whu.0529c018.png\";","import React from \"react\";\n\nconst Navbar = (props) => (\n    <nav className=\"navbar\">\n            <span className=\"brand\">\n                <a href=\"/\"><img alt=\"epl\" src=\"../images/logo.png\"/></a>\n            </span>\n\n            <span className=\"\">\n                {props.message}\n            </span>\n\n            <span>\n                Score: {props.correct} | Top Score: {props.topscore}\n            </span>\n    </nav>\n)\nexport default Navbar;","import React from \"react\";\n\nconst Header = () => (\n    <header class=\"header\">\n        <h1>Premier League Memory Game</h1>\n        <h2>Click on an image to earn points. If you click the same image twice you lose!</h2>\n    </header>\n)\nexport default Header;","import React from \"react\";\n\nconst Main = (props) => (\n    <div className=\"container text-center\">\n        {props.children}\n    </div>\n)\nexport default Main;","import React from \"react\";\n\nconst Footer = () => (\n    <footer className=\"footer\">\n        <div className=\"bottom\">\n            Unofficial EPL 18/19 Memory Game\n        </div>\n    </footer>\n)\nexport default Footer;","import React from \"react\";\n\nconst Image = (props) => (\n    <img\n        src={props.src}\n        alt={props.name}\n        className=\"img-thumbnail clickable-images\"\n        onClick={() => props.pickImg(props.name)} \n    />\n)\nexport default Image;","import React, { Component } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport Footer from \"./components/Footer\";\nimport Image from \"./components/Image\";\nimport Img from \"./components/Img.json\";\n\nimport bournemouth from \"./clubimgs/bou.png\";\nimport arsenal from \"./clubimgs/ars.png\";\nimport brightonandhovealbion from \"./clubimgs/bha.png\";\nimport burnley from \"./clubimgs/bur.png\";\nimport cardiffcity from \"./clubimgs/car.png\";\nimport chelsea from \"./clubimgs/che.png\";\nimport crystalpalace from \"./clubimgs/cry.png\";\nimport everton from \"./clubimgs/eve.png\";\nimport fulham from \"./clubimgs/ful.png\";\nimport huddersfieldtown from \"./clubimgs/hud.png\";\nimport leicestercity from \"./clubimgs/lei.png\";\nimport liverpool from \"./clubimgs/liv.png\";\nimport manchestercity from \"./clubimgs/mci.png\";\nimport manchesterunited from \"./clubimgs/mun.png\";\nimport newcastleunited from \"./clubimgs/new.png\";\nimport southampton from \"./clubimgs/sou.png\";\nimport tottenhamhotspur from \"./clubimgs/tot.png\";\nimport watford from \"./clubimgs/wat.png\";\nimport westhamunited from \"./clubimgs/whu.png\";\nimport wolverhamptonwanderers from \"./clubimgs/wol.png\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  \n  state = {\n    picked: [],\n    correct: 0,\n    topscore: 0,\n    message: 'Click an image to begin'\n  };\n\n  shuffleArray = () => {\n    let imgArray = Img;\n    for (let i = imgArray.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      [imgArray[i], imgArray[j]] = [imgArray[j], imgArray[i]];\n    }\n    return imgArray\n  }\n\n  pickImg = (name) => {\n    console.log(\"Clicked!\");\n    let picked = this.state.picked;\n    \n    if (picked.indexOf(name) === -1) {\n      this.setState({\n        picked: picked.concat(name),\n        correct: this.state.correct + 1,\n        topscore: this.state.correct + 1 > this.state.topscore ? this.state.correct + 1 : this.state.topscore,\n        message: \"Correct!\" \n      })\n      this.shuffleArray();\n    }\n    else {\n      this.setState({\n        message: \"Already Selected - Game Over!\",\n        correct: 0,\n        picked: []\n      })\n    }\n  }\n  \n  imgSwitch = (name) => {\n    switch (name) {\n      case \"bournemouth\":\n        return `${bournemouth}`\n      case \"arsenal\":\n        return `${arsenal}`\n      case \"brightonandhovealbion\":\n        return `${brightonandhovealbion}`\n      case \"burnley\":\n        return `${burnley}`\n      case \"cardiffcity\":\n        return `${cardiffcity}`\n      case \"chelsea\":\n        return `${chelsea}`\n      case \"crystalpalace\":\n        return `${crystalpalace}`\n      case \"everton\":\n        return `${everton}`\n      case \"fulham\":\n        return `${fulham}`\n      case \"huddersfieldtown\":\n        return `${huddersfieldtown}`\n      case \"leicestercity\":\n        return `${leicestercity}`\n      case \"liverpool\":\n        return `${liverpool}`\n      case \"manchestercity\":\n        return `${manchestercity}`\n      case \"manchesterunited\":\n        return `${manchesterunited}`\n      case \"newcastleunited\":\n        return `${newcastleunited}`\n      case \"southampton\":\n        return `${southampton}`\n      case \"tottenhamhotspur\":\n        return `${tottenhamhotspur}`\n      case \"watford\":\n        return `${watford}`\n      case \"westhamunited\":\n        return `${westhamunited}`\n      case \"wolverhamptonwanderers\":\n        return `${wolverhamptonwanderers}`\n      default:\n        return `${wolverhamptonwanderers}`\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar correct={this.state.correct} topscore={this.state.topscore} message={this.state.message}/>\n        <Header />\n        <Main>\n          {this.shuffleArray(Img).map(image => (\n            <Image src={this.imgSwitch(image.name)} name={image.name} key={image.name} pickImg={this.pickImg}  />\n          ))}\n        </Main>\n        <Footer />\n\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}